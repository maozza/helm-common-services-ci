{{- define "common.deployment" -}}
{{- $fullName := include "common.fullname" . -}}
{{- $commonValues := dict "Values" .Values.common -}}
{{- with merge . $commonValues -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ $fullName }}"
  labels:
    {{block "common.deployment.labels" . -}}
    {{ template "common.metadata.labels" . }}
    {{- end }}
  annotations:
spec:
  minReadySeconds: 10
  replicas: {{default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ $fullName }}"
      release: {{.Release.Name | quote }}
  {{- if .Values.strategy }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
        {{- with .Values.strategy.rollingUpdate }}
    rollingUpdate:
{{ toYaml . | indent 8 }}
        {{- end }}
    {{- end }}
  {{- end }}          
  template:
    metadata:
      annotations: 
    {{- if .Values.istio.enabled }}
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/statsInclusionPrefixes: {{ .Values.istio.statsInclusionPrefixes | quote }}        
    {{- else }}
        sidecar.istio.io/inject: "false"        
    {{- end }}    
      labels:
        app: {{ $fullName }}
        release: {{.Release.Name | quote }}
        {{- block "common.deployment.spec.xlabels" .}}{{end}}
    spec:
      initContainers:
    {{- with .Values.init_config }}      
      {{- template "common.init_config" . -}}
    {{- end }}     
      containers:
      - name: "{{ $fullName }}"
        image: "{{ .Values.image.repository }}/{{ if .Values.image.name}}{{ .Values.image.name }}{{ else }}{{  $fullName }}{{end}}:{{ .Values.image.tag }}"
        imagePullPolicy: {{default "IfNotPresent" .Values.image.pullPolicy}}
        volumeMounts:
        {{- with .Values.init_config }}
        - name: init-config
          mountPath: {{ .volumeMounts.mountPath }}
        {{- end }}
        {{- range .Values.secrets }}
        - name: {{  .name }}
          mountPath: {{ .path }}
        {{- end }}
        {{- with .Values.ports }}
        ports:
          {{- toYaml . | nindent 8 }}    
        {{- end }} 
        {{- with .Values.env }}       
        env:
          {{- toYaml . | nindent 8 }}    
        {{- end }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}    
        {{- end }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}    
        {{- end }}                           
        resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.init_config }}
      - name: init-config
        emptyDir: {}
      {{end}}
      {{- range .Values.secrets }}
      - name: {{  .name }}
        secret:
            secretName: {{ .name }}
            defaultMode: {{ default "0700" .defaultMode }}      
      {{end}}
  {{- end}}
{{- end }}
